    double maxAverageRatio(vector<vector<int>>& classes, int extra) {
        priority_queue<pair<double,pair<int,int>>>pq;
        int n=classes.size();
        for(int i=0;i<n;i++){
            int a=classes[i][0];
            int b=classes[i][1];
             double delta=(double)(a+1)/(b+1)-(double)a/b;
            
              pq.push({delta,{a,b}});
         
        }
        
        while(extra--){
               // cout<< pq.top().first<<" "<<pq.top().second.first<<" "<<pq.top().second.second<<endl;
            pair<int,int>p=pq.top().second;
            int a=p.first;
            int b=p.second;
             pq.pop();
            a+=1;
            b+=1;
            double delta=(double)(a+1)/(b+1) - (double)a/b;
           
            // a++,b++;
            pq.push({delta,{ a,b}});
            // pq.top().first=avg;
            // pq.top().second.first=a+1;
            // pq.top().second.second=b+1;
        }
         double ans=0;
        while(pq.size()){
           ans+=(double)(pq.top().second.first)/(pq.top().second.second);
            pq.pop();
        }
        return (double)ans/(n);
    }
