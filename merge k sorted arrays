 vector<int> mergeKArrays(vector<vector<int>> arr, int k)
    {
        //code here
        vector<int>ans;
        priority_queue<int,vector<int>,greater<int>>pq;
        
        for(int i=0;i<k;i++){
                pq.push(arr[i][0]);
                arr[i].erase(arr[i].begin());
                 if(arr[i].size()==0)arr.erase(arr.begin()+i);
            }
       
        while(pq.size()){
            ans.push_back(pq.top());
            pq.pop();
            int idx=100;
            int mn=1e9;
            for(int i=0;i<arr.size();i++){
                if(mn>arr[i][0]){
                    mn=arr[i][0];
                    idx=i;
                }
            }
        if(mn!=1e9){ pq.push(mn);
                    arr[idx].erase(arr[idx].begin());
                    if(arr[idx].size()==0)arr.erase(arr.begin()+idx);
        }
        }
         while(pq.size()){
             ans.push_back(pq.top());
             pq.pop();
         }
         return ans;
    }
